using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using Core;
using Core.ScannerResult;
//using Lab3.Models;
using NUnit.Framework;
namespace Tests
{
    public class Tests
    {
        private List<bool> flags=new List<bool>();
        [SetUp]
        public void Setup()
        {
            flags.Add(true); //1
            flags.Add(true); //2
            flags.Add(true); //3
            flags.Add(true); //4
            flags.Add(true); //5
            flags.Add(true); //6
            flags.Add(true); //7
        }
        [Test]
        public void EmptyDirectory()
        {
            Console.WriteLine("1 - " + Convert.ToString(flags[0]));
            var dirInfo = new DirectoryInfo(".");
            if (dirInfo.Exists)
            {
                var maindir=dirInfo.CreateSubdirectory("For_Test1");
                if (maindir.Exists)
                {
                    Scanner scanner = new Scanner();
                    ScannerResult? scannerResult = scanner.StartScan(maindir.FullName,5);
                    if (scannerResult == null)
                    {
                        Console.WriteLine("scannerresult fail");
                        Assert.Fail("Autogenerated");
                        return;
                    }
                    //Console.WriteLine(scannerResult.Name+"   "+maindir.FullName);
                    Assert.AreEqual(true,scannerResult.Name==maindir.Name);
                    Assert.AreEqual(true,scannerResult.Size==0);
                    Assert.AreEqual(true,scannerResult.Directories.Count==0);
                    Assert.AreEqual(true,scannerResult.Files.Count==0);
                }
                else
                {
                    Console.WriteLine("maindir fail");
                    Assert.Fail("Autogenerated");
                    return;
                }
                if (!flags[0])
                    return;
                Directory.Delete(maindir.FullName);
            }
            else
            {
                Console.WriteLine("dirInfo fail");
                Assert.Fail("Autogenerated");
            }
        }
        [Test]
        public void Directory_w_one_file()
        {
            Console.WriteLine("2 - " + Convert.ToString(flags[1]));
            var dirInfo = new DirectoryInfo(".");
            if (dirInfo.Exists)
            {
                var maindir=dirInfo.CreateSubdirectory("For_Test2");
                string filepath = maindir.FullName+"\\"+maindir.Name+".txt";
                var fs=File.Create(filepath);
                if (fs!=null && fs.CanWrite)
                    fs.Write(Encoding.UTF8.GetBytes("Hello"));
                if (fs!=null)
                    fs.Close();
                if (maindir.Exists)
                {
                    Scanner scanner = new Scanner();
                    ScannerResult? scannerResult = scanner.StartScan(maindir.FullName,5);
                    if (scannerResult == null)
                    {
                        Console.WriteLine("scannerresult fail");
                        Assert.Fail("Autogenerated");
                        return;
                    }
                    //Console.WriteLine(scannerResult.Name+"   "+maindir.FullName);
                    Assert.AreEqual(true,scannerResult.Name==maindir.Name);
                    Assert.AreEqual(true,scannerResult.Size==5);
                    Assert.AreEqual(true,scannerResult.Directories.Count==0);
                    Assert.AreEqual(true,scannerResult.Files.Count==1);
                    Assert.AreEqual(true,scannerResult.Files[0].Name==maindir.Name+".txt");
                    Assert.AreEqual(true,scannerResult.Files[0].Size==5);
                    Assert.AreEqual(true,scannerResult.Files[0].Directories.Count==0);
                    Assert.AreEqual(true,scannerResult.Files[0].Files.Count==0);
                }
                else
                {
                    Console.WriteLine("maindir fail");
                    Assert.Fail("Autogenerated");
                    return;
                }
                if (!flags[1])
                    return;
                File.Delete(filepath);
                Directory.Delete(maindir.FullName);
            }
            else
            {
                Console.WriteLine("dirInfo fail");
                Assert.Fail("Autogenerated");
            }
        }
        [Test]
        public void Directory_w_some_file()
        {
            Console.WriteLine("3 - " + Convert.ToString(flags[2]));
            var dirInfo = new DirectoryInfo(".");
            if (dirInfo.Exists)
            {
                var maindir=dirInfo.CreateSubdirectory("For_Test3");
                List<String> filepath = new List<string>();
                 //   maindir.FullName+"\\"+maindir.Name+".txt";
                 for (int i = 0; i < 3; i++)
                 {
                     filepath.Add(maindir.FullName+"\\"+maindir.Name+"_"+Convert.ToString(i)+".txt");
                     var fs = File.Create(filepath[i]);
                     if (fs != null && fs.CanWrite)
                         fs.Write(Encoding.UTF8.GetBytes("Hello"));
                     if (fs != null)
                         fs.Close();
                 }

                 if (maindir.Exists)
                {
                    Scanner scanner = new Scanner();
                    ScannerResult? scannerResult = scanner.StartScan(maindir.FullName,5);
                    if (scannerResult == null)
                    {
                        Console.WriteLine("scannerresult fail");
                        Assert.Fail("Autogenerated");
                        return;
                    }
                    //Console.WriteLine(scannerResult.Name+"   "+maindir.FullName);
                    Assert.AreEqual(true,scannerResult.Name==maindir.Name);
                    Assert.AreEqual(true,scannerResult.Size==15);
                    Assert.AreEqual(true,scannerResult.Directories.Count==0);
                    Assert.AreEqual(true,scannerResult.Files.Count==3);
                    for (int i = 0; i < 3; i++)
                    {
                        Assert.AreEqual(true, scannerResult.Files[i].Name == maindir.Name+"_"+Convert.ToString(i)+".txt");
                        Assert.AreEqual(true, scannerResult.Files[i].Size == 5);
                        Assert.AreEqual(true, scannerResult.Files[i].Directories.Count == 0);
                        Assert.AreEqual(true, scannerResult.Files[i].Files.Count == 0);
                    }
                }
                else
                {
                    Console.WriteLine("maindir fail");
                    Assert.Fail("Autogenerated");
                    return;
                }
                 if (!flags[2])
                     return;
                 for (int i=0;i<3;i++)
                  File.Delete(filepath[i]);
                Directory.Delete(maindir.FullName);
            }
            else
            {
                Console.WriteLine("dirInfo fail");
                Assert.Fail("Autogenerated");
            }
        }
        [Test]
        public void Empty_Directory_with_empty_directory()
        {
            Console.WriteLine("4 - " + Convert.ToString(flags[3]));
            var dirInfo = new DirectoryInfo(".");
            if (dirInfo.Exists)
            {
                var maindir=dirInfo.CreateSubdirectory("For_Test4");
                var helpdir = maindir.CreateSubdirectory("for_test4");
                if (maindir.Exists)
                {
                    Scanner scanner = new Scanner();
                    ScannerResult? scannerResult = scanner.StartScan(maindir.FullName,5);
                    if (scannerResult == null)
                    {
                        Console.WriteLine("scannerresult fail");
                        Assert.Fail("Autogenerated");
                        return;
                    }
                    //Console.WriteLine(scannerResult.Name+"   "+maindir.FullName);
                    Assert.AreEqual(true,scannerResult.Name==maindir.Name);
                    Assert.AreEqual(true,scannerResult.Size==0);
                    Assert.AreEqual(true,scannerResult.Directories.Count==1);
                    Assert.AreEqual(true,scannerResult.Files.Count==0);
                    Assert.AreEqual(true,scannerResult.Directories[0].Name==helpdir.Name);
                    Assert.AreEqual(true,scannerResult.Directories[0].Size==0);
                    Assert.AreEqual(true,scannerResult.Directories[0].Directories.Count==0);
                    Assert.AreEqual(true,scannerResult.Directories[0].Files.Count==0);
                }
                else
                {
                    Console.WriteLine("maindir fail");
                    Assert.Fail("Autogenerated");
                    return;
                }
                if (!flags[3])
                    return;
                Directory.Delete(helpdir.FullName); 
                Directory.Delete(maindir.FullName);
            }
            else
            {
                Console.WriteLine("dirInfo fail");
                Assert.Fail("Autogenerated");
            }
        }
        [Test]
        public void Directory_with_empty_directory_and_some_files()
        {
            Console.WriteLine("5 - " + Convert.ToString(flags[4]));
            var dirInfo = new DirectoryInfo(".");
            if (dirInfo.Exists)
            {
                var maindir=dirInfo.CreateSubdirectory("For_Test5");
                var helpdir = maindir.CreateSubdirectory("for_test5");
                List<String> filepath = new List<string>();
                 //   maindir.FullName+"\\"+maindir.Name+".txt";
                 for (int i = 0; i < 3; i++)
                 {
                     filepath.Add(maindir.FullName+"\\"+maindir.Name+"_"+Convert.ToString(i)+".txt");
                     var fs = File.Create(filepath[i]);
                     if (fs != null && fs.CanWrite)
                         fs.Write(Encoding.UTF8.GetBytes("Hello"));
                     if (fs != null)
                         fs.Close();
                 }

                 if (maindir.Exists)
                {
                    Scanner scanner = new Scanner();
                    ScannerResult? scannerResult = scanner.StartScan(maindir.FullName,5);
                    if (scannerResult == null)
                    {
                        Console.WriteLine("scannerresult fail");
                        Assert.Fail("Autogenerated");
                        return;
                    }
                    //Console.WriteLine(scannerResult.Name+"   "+maindir.FullName);
                    Assert.AreEqual(true,scannerResult.Name==maindir.Name);
                    Assert.AreEqual(true,scannerResult.Size==15);
                    Assert.AreEqual(true,scannerResult.Directories.Count==1);
                    Assert.AreEqual(true,scannerResult.Files.Count==3);
                    for (int i = 0; i < 3; i++)
                    {
                        Assert.AreEqual(true, scannerResult.Files[i].Name == maindir.Name+"_"+Convert.ToString(i)+".txt");
                        Assert.AreEqual(true, scannerResult.Files[i].Size == 5);
                        Assert.AreEqual(true, scannerResult.Files[i].Directories.Count == 0);
                        Assert.AreEqual(true, scannerResult.Files[i].Files.Count == 0);
                    }
                    Assert.AreEqual(true,scannerResult.Directories[0].Name==helpdir.Name);
                    Assert.AreEqual(true,scannerResult.Directories[0].Size==0);
                    Assert.AreEqual(true,scannerResult.Directories[0].Directories.Count==0);
                    Assert.AreEqual(true,scannerResult.Directories[0].Files.Count==0);
                }
                else
                {
                    Console.WriteLine("maindir fail");
                    Assert.Fail("Autogenerated");
                    return;
                }
                 if (!flags[4])
                     return;
                Directory.Delete(helpdir.FullName); 
                 for (int i=0;i<3;i++)
                  File.Delete(filepath[i]);
                Directory.Delete(maindir.FullName);
            }
            else
            {
                Console.WriteLine("dirInfo fail");
                Assert.Fail("Autogenerated");
            }
        }
        [Test]
        public void Empty_directory_with_directory_contains_some_files()
        {
            Console.WriteLine("6 - " + Convert.ToString(flags[5]));
            var dirInfo = new DirectoryInfo(".");
            if (dirInfo.Exists)
            {
                var maindir=dirInfo.CreateSubdirectory("For_Test6");
                var helpdir = maindir.CreateSubdirectory("for_test6");
                List<String> filepath = new List<string>();
                 //   maindir.FullName+"\\"+maindir.Name+".txt";
                 for (int i = 0; i < 3; i++)
                 {
                     filepath.Add(helpdir.FullName+"\\"+helpdir.Name+"_"+Convert.ToString(i)+".txt");
                     var fs = File.Create(filepath[i]);
                     if (fs != null && fs.CanWrite)
                         fs.Write(Encoding.UTF8.GetBytes("Hello"));
                     if (fs != null)
                         fs.Close();
                 }

                 if (maindir.Exists)
                {
                    Scanner scanner = new Scanner();
                    ScannerResult? scannerResult = scanner.StartScan(maindir.FullName,5);
                    if (scannerResult == null)
                    {
                        Console.WriteLine("scannerresult fail");
                        Assert.Fail("Autogenerated");
                        return;
                    }
                    //Console.WriteLine(scannerResult.Name+"   "+maindir.FullName);
                    Assert.AreEqual(true,scannerResult.Name==maindir.Name);
                    Assert.AreEqual(true,scannerResult.Size==15);
                    Assert.AreEqual(true,scannerResult.Directories.Count==1);
                    Assert.AreEqual(true,scannerResult.Files.Count==0);
                    for (int i = 0; i < 3; i++)
                    {
                        Assert.AreEqual(true, scannerResult.Directories[0].Files[i].Name == helpdir.Name+"_"+Convert.ToString(i)+".txt");
                        Assert.AreEqual(true, scannerResult.Directories[0].Files[i].Size == 5);
                        Assert.AreEqual(true, scannerResult.Directories[0].Files[i].Directories.Count == 0);
                        Assert.AreEqual(true, scannerResult.Directories[0].Files[i].Files.Count == 0);
                    }
                    Assert.AreEqual(true,scannerResult.Directories[0].Name==helpdir.Name);
                    Assert.AreEqual(true,scannerResult.Directories[0].Size==15);
                    Assert.AreEqual(true,scannerResult.Directories[0].Directories.Count==0);
                    Assert.AreEqual(true,scannerResult.Directories[0].Files.Count==3);
                }
                else
                {
                    Console.WriteLine("maindir fail");
                    Assert.Fail("Autogenerated");
                    return;
                }
                 if (!flags[5])
                     return;
                 for (int i=0;i<3;i++)
                  File.Delete(filepath[i]);
                 Directory.Delete(helpdir.FullName); 
                 Directory.Delete(maindir.FullName);
            }
            else
            {
                Console.WriteLine("dirInfo fail");
                Assert.Fail("Autogenerated");
            }
        }
        [Test]
        public void Directory_with_files_and_directory_contains_some_files()
        {
            //Console.WriteLine("7 - " + Convert.ToString(flags[6]));
            var dirInfo = new DirectoryInfo(".");
            if (dirInfo.Exists)
            {
                var maindir=dirInfo.CreateSubdirectory("For_Test7");
                var helpdir = maindir.CreateSubdirectory("for_test7");
                List<String> filepath = new List<string>();
                 //   maindir.FullName+"\\"+maindir.Name+".txt";
                 for (int i = 0; i < 3; i++)
                 {
                     filepath.Add(maindir.FullName+"\\"+maindir.Name+"_"+Convert.ToString(i)+".txt");
                     var fs = File.Create(filepath[i]);
                     if (fs != null && fs.CanWrite)
                         fs.Write(Encoding.UTF8.GetBytes("Hello"));
                     if (fs != null)
                         fs.Close();
                 }
                 for (int i = 0; i < 3; i++)
                 {
                     filepath.Add(helpdir.FullName+"\\"+helpdir.Name+"_"+Convert.ToString(i)+".txt");
                     var fs = File.Create(filepath[i+3]);
                     if (fs != null && fs.CanWrite)
                         fs.Write(Encoding.UTF8.GetBytes("Hello"));
                     if (fs != null)
                         fs.Close();
                 }

                 if (maindir.Exists)
                {
                    Scanner scanner = new Scanner();
                    ScannerResult? scannerResult = scanner.StartScan(maindir.FullName,5);
                    if (scannerResult == null)
                    {
                        Console.WriteLine("scannerresult fail");
                        Assert.Fail("Autogenerated");
                        return;
                    }
                    //Console.WriteLine(scannerResult.Name+"   "+maindir.FullName);
                    Assert.AreEqual(true,scannerResult.Name==maindir.Name);
                    Assert.AreEqual(true,scannerResult.Size==30);
                    Assert.AreEqual(true,scannerResult.Directories.Count==1);
                    Assert.AreEqual(true,scannerResult.Files.Count==3);
                    for (int i = 0; i < 3; i++)
                    {
                        Assert.AreEqual(true, scannerResult.Files[i].Name == maindir.Name+"_"+Convert.ToString(i)+".txt");
                        Assert.AreEqual(true, scannerResult.Files[i].Size == 5);
                        Assert.AreEqual(true, scannerResult.Files[i].Directories.Count == 0);
                        Assert.AreEqual(true, scannerResult.Files[i].Files.Count == 0);
                    }
                    for (int i = 0; i < 3; i++)
                    {
                        Assert.AreEqual(true, scannerResult.Directories[0].Files[i].Name == helpdir.Name+"_"+Convert.ToString(i)+".txt");
                        Assert.AreEqual(true, scannerResult.Directories[0].Files[i].Size == 5);
                        Assert.AreEqual(true, scannerResult.Directories[0].Files[i].Directories.Count == 0);
                        Assert.AreEqual(true, scannerResult.Directories[0].Files[i].Files.Count == 0);
                    }
                    Assert.AreEqual(true,scannerResult.Directories[0].Name==helpdir.Name);
                    Assert.AreEqual(true,scannerResult.Directories[0].Size==15);
                    Assert.AreEqual(true,scannerResult.Directories[0].Directories.Count==0);
                    Assert.AreEqual(true,scannerResult.Directories[0].Files.Count==3);
                }
                else
                {
                    Console.WriteLine("maindir fail");
                    Assert.Fail("Autogenerated");
                    return;
                }

                 if (!flags[6])
                     return;
                 for (int i=0;i<6;i++)
                  File.Delete(filepath[i]);
                 Directory.Delete(helpdir.FullName); 
                 Directory.Delete(maindir.FullName);
            }
            else
            {
                Console.WriteLine("dirInfo fail");
                Assert.Fail("Autogenerated");
            }
        }
    }
}